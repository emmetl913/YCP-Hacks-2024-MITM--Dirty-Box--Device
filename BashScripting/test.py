#exec("""\nimport string\nimport pygame\nimport random\n\npygame.init()\ninfo = pygame.display.Info()\nwidth, height = info.current_w, info.current_h\nscreen = pygame.display.set_mode((width, height), pygame.NOFRAME)\npygame.display.set_caption("Matrix Rain")\npygame.display.set_mode((width, height), pygame.NOFRAME)\npygame.display.set_caption("Matrix Rain")\npygame.display.set_mode((width, height), pygame.NOFRAME)\npygame.display.set_caption("Matrix Rain")\n\nblack = (0, 0, 0)\ngreen = (0, 255, 0)\n\nfont_size = 30\nfont = pygame.font.SysFont('SerifBold', font_size)\n\ndrops = [0] * (width // font_size)\n\nfor i in range(len(drops)):\n    drops[i] = random.randint(-height // font_size, 0)\n\nrunning = True\nwhile running:\n    screen.fill(black)\n\n    for i in range(len(drops)):\n        char = random.choice(string.printable)\n        text = font.render(char, True, green)\n        screen.blit(text, (i * font_size, drops[i] * font_size))\n        drops[i] += 1\n        if drops[i] * font_size >= height:\n            drops[i] = random.randint(-height // font_size, 0)\n\n    pygame.display.flip()\n    pygame.time.delay(20)\n\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n\npygame.quit()\n""")
#import string, pygame, random; pygame.init(); w, h = pygame.display.Info().current_w, pygame.display.Info().current_h; screen = pygame.display.set_mode((w, h), pygame.NOFRAME); pygame.display.set_caption('Matrix Rain'); black, green = (0, 0, 0), (0, 255, 0); font = pygame.font.SysFont('SerifBold', 30); drops = [random.randint(-h // 30, 0) for _ in range(w // 30)]; running = True; while running: screen.fill(black); for i in range(len(drops)): char = random.choice(string.printable); text = font.render(char, True, green); screen.blit(text, (i * 30, drops[i] * 30)); drops[i] += 1; if drops[i] * 30 >= h: drops[i] = random.randint(-h // 30, 0); pygame.display.flip(); pygame.time.delay(20); for event in pygame.event.get(): if event.type == pygame.QUIT: running = False; pygame.quit()

#\nimport string\nimport pygame\nimport random\n\npygame.init()\ninfo = pygame.display.Info()\nwidth, height = info.current_w, info.current_h\nscreen = pygame.display.set_mode((width, height), pygame.NOFRAME)\npygame.display.set_caption("Matrix Rain")\npygame.display.set_mode((width, height), pygame.NOFRAME)\npygame.display.set_caption("Matrix Rain")\npygame.display.set_mode((width, height), pygame.NOFRAME)\npygame.display.set_caption("Matrix Rain")\n\nblack = (0, 0, 0)\ngreen = (0, 255, 0)\n\nfont_size = 30\nfont = pygame.font.SysFont('SerifBold', font_size)\n\ndrops = [0] * (width // font_size)\n\nfor i in range(len(drops)):\n    drops[i] = random.randint(-height // font_size, 0)\n\nrunning = True\nwhile running:\n    screen.fill(black)\n\n    for i in range(len(drops)):\n        char = random.choice(string.printable)\n        text = font.render(char, True, green)\n        screen.blit(text, (i * font_size, drops[i] * font_size))\n        drops[i] += 1\n        if drops[i] * font_size >= height:\n            drops[i] = random.randint(-height // font_size, 0)\n\n    pygame.display.flip()\n    pygame.time.delay(20)\n\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n\npygame.quit()\n
# py -c "import pygame; pygame.init(); screen = pygame.display.set_mode((400, 300)); pygame.display.set_caption('Simple Pygame Window'); running = True; while running: for event in pygame.event.get(): if event.type == pygame.QUIT: running = False; screen.fill((0, 0, 0)); pygame.display.flip(); pygame.quit()"
#(lambda _Y: (lambda string: (lambda pygame: (lambda random: [pygame.init(), (lambda info: [(lambda screen: [pygame.display.set_caption('Matrix Rain'), [pygame.display.set_mode((width, height), pygame.NOFRAME), [pygame.display.set_caption('Matrix Rain'), [pygame.display.set_mode((width, height), pygame.NOFRAME), [pygame.display.set_caption('Matrix Rain'), (lambda black: (lambda green: (lambda font_size: (lambda font: (lambda drops: (lambda _term4, _items4: (lambda _targ4: (lambda _targ4, i: (lambda _loop4: _loop4(_targ4, i))(_Y(lambda _loop4: (lambda _targ4, i: ((lambda i: [(lambda _targ4: _loop4(_targ4, i))(next(_items4, _term4)) for drops[i] in [random.randint((-height // font_size), 0)]][0])(_targ4)) if (_targ4 is not _term4) else (lambda running: (lambda char, running, text: (lambda _loop1: _loop1(char, running, text))(_Y(lambda _loop1: (lambda char, running, text: ([screen.fill(black), (lambda _term3, _items3: (lambda _targ3: (lambda _targ3, char, i, text: (lambda _loop3: _loop3(_targ3, char, i, text))(_Y(lambda _loop3: (lambda _targ3, char, i, text: ((lambda i: (lambda char: (lambda text: [screen.blit(text, ((i * font_size), (drops[i] * font_size))), [([(lambda _targ3: _loop3(_targ3, char, i, text))(next(_items3, _term3)) for drops[i] in [random.randint((-height // font_size), 0)]][0] if ((drops[i] * font_size) >= height) else (lambda _targ3: _loop3(_targ3, char, i, text))(next(_items3, _term3))) for drops[i] in [(drops[i] + 1)]][0]][-1])(font.render(char, True, green)))(random.choice(string.printable)))(_targ3)) if (_targ3 is not _term3) else [pygame.display.flip(), [pygame.time.delay(20), (lambda _term2, _items2: (lambda _targ2: (lambda _targ2, event, running: (lambda _loop2: _loop2(_targ2, event, running))(_Y(lambda _loop2: (lambda _targ2, event, running: ((lambda event: ((lambda running: (lambda _targ2: _loop2(_targ2, event, running))(next(_items2, _term2)))(False) if (event.type == pygame.QUIT) else (lambda _targ2: _loop2(_targ2, event, running))(next(_items2, _term2))))(_targ2)) if (_targ2 is not _term2) else _loop1(char, running, text)))))(_targ2 if "_targ2" in dir() else None, event if "event" in dir() else None, running if "running" in dir() else None))(next(_items2, _term2)))([], iter(pygame.event.get()))][-1]][-1]))))(_targ3 if "_targ3" in dir() else None, char if "char" in dir() else None, i if "i" in dir() else None, text if "text" in dir() else None))(next(_items3, _term3)))([], iter(range(len(drops))))][-1]) if running else pygame.quit()))))(char if "char" in dir() else None, running if "running" in dir() else None, text if "text" in dir() else None))(True)))))(_targ4 if "_targ4" in dir() else None, i if "i" in dir() else None))(next(_items4, _term4)))([], iter(range(len(drops)))))(([0] * (width // font_size))))(pygame.font.SysFont('SerifBold', font_size)))(30))((0, 255, 0)))((0, 0, 0))][-1]][-1]][-1]][-1]][-1])(pygame.display.set_mode((width, height), pygame.NOFRAME)) for (width, height) in [(info.current_w, info.current_h)]][0])(pygame.display.Info())][-1])(__import__('random')))(__import__('pygame')))(__import__('string')))((lambda f: (lambda x: x(x))(lambda y: f(lambda *args: y(y)(*args)))))
exec("print('Hello, world!'); print('This is an example of exec()')")
